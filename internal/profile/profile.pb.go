// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: profile.proto

/*
	Package profile is a generated protocol buffer package.

	It is generated from these files:
		profile.proto

	It has these top-level messages:
		UpsertProfileOpts
		ProfilePayload
*/
package profile

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/gogo/protobuf/types"
import _ "github.com/canary-health/idp/internal/user"
import _ "github.com/canary-health/protobuf/types"
import _ "github.com/canary-health/protobuf/types"
import _ "github.com/canary-health/protobuf/types"

import time "time"

import types "github.com/gogo/protobuf/types"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type UpsertProfileOpts struct {
	UserUUID    string `protobuf:"bytes,1,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty" db:"user_uuid"`
	ScreenName  string `protobuf:"bytes,2,opt,name=screen_name,json=screenName,proto3" json:"screen_name,omitempty" db:"screen_name"`
	Avatar      string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Timezone    string `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Locale      string `protobuf:"bytes,6,opt,name=locale,proto3" json:"locale,omitempty"`
}

func (m *UpsertProfileOpts) Reset()                    { *m = UpsertProfileOpts{} }
func (m *UpsertProfileOpts) String() string            { return proto.CompactTextString(m) }
func (*UpsertProfileOpts) ProtoMessage()               {}
func (*UpsertProfileOpts) Descriptor() ([]byte, []int) { return fileDescriptorProfile, []int{0} }

func (m *UpsertProfileOpts) GetUserUUID() string {
	if m != nil {
		return m.UserUUID
	}
	return ""
}

func (m *UpsertProfileOpts) GetScreenName() string {
	if m != nil {
		return m.ScreenName
	}
	return ""
}

func (m *UpsertProfileOpts) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *UpsertProfileOpts) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpsertProfileOpts) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *UpsertProfileOpts) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

type ProfilePayload struct {
	UserUUID    string     `protobuf:"bytes,1,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty" db:"user_uuid"`
	ScreenName  string     `protobuf:"bytes,2,opt,name=screen_name,json=screenName,proto3" json:"screen_name,omitempty" db:"screen_name"`
	Avatar      string     `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Description string     `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Timezone    string     `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Locale      string     `protobuf:"bytes,6,opt,name=locale,proto3" json:"locale,omitempty"`
	CreatedAt   *time.Time `protobuf:"bytes,996,opt,name=created_at,json=createdAt,stdtime" json:"created_at,omitempty" db:"created_at"`
	UpdatedAt   *time.Time `protobuf:"bytes,997,opt,name=updated_at,json=updatedAt,stdtime" json:"updated_at,omitempty" db:"updated_at"`
	ArchivedAt  *time.Time `protobuf:"bytes,998,opt,name=archived_at,json=archivedAt,stdtime" json:"archived_at,omitempty" db:"archived_at"`
	DeletedAt   *time.Time `protobuf:"bytes,999,opt,name=deleted_at,json=deletedAt,stdtime" json:"deleted_at,omitempty" db:"deleted_at"`
}

func (m *ProfilePayload) Reset()                    { *m = ProfilePayload{} }
func (m *ProfilePayload) String() string            { return proto.CompactTextString(m) }
func (*ProfilePayload) ProtoMessage()               {}
func (*ProfilePayload) Descriptor() ([]byte, []int) { return fileDescriptorProfile, []int{1} }

func (m *ProfilePayload) GetUserUUID() string {
	if m != nil {
		return m.UserUUID
	}
	return ""
}

func (m *ProfilePayload) GetScreenName() string {
	if m != nil {
		return m.ScreenName
	}
	return ""
}

func (m *ProfilePayload) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ProfilePayload) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProfilePayload) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *ProfilePayload) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *ProfilePayload) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ProfilePayload) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *ProfilePayload) GetArchivedAt() *time.Time {
	if m != nil {
		return m.ArchivedAt
	}
	return nil
}

func (m *ProfilePayload) GetDeletedAt() *time.Time {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*UpsertProfileOpts)(nil), "canaryhealth.idp.profile.UpsertProfileOpts")
	proto.RegisterType((*ProfilePayload)(nil), "canaryhealth.idp.profile.ProfilePayload")
}
func (m *UpsertProfileOpts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpsertProfileOpts) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.UserUUID) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.UserUUID)))
		i += copy(dAtA[i:], m.UserUUID)
	}
	if len(m.ScreenName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.ScreenName)))
		i += copy(dAtA[i:], m.ScreenName)
	}
	if len(m.Avatar) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Avatar)))
		i += copy(dAtA[i:], m.Avatar)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.Timezone) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Timezone)))
		i += copy(dAtA[i:], m.Timezone)
	}
	if len(m.Locale) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Locale)))
		i += copy(dAtA[i:], m.Locale)
	}
	return i, nil
}

func (m *ProfilePayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProfilePayload) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.UserUUID) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.UserUUID)))
		i += copy(dAtA[i:], m.UserUUID)
	}
	if len(m.ScreenName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.ScreenName)))
		i += copy(dAtA[i:], m.ScreenName)
	}
	if len(m.Avatar) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Avatar)))
		i += copy(dAtA[i:], m.Avatar)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.Timezone) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Timezone)))
		i += copy(dAtA[i:], m.Timezone)
	}
	if len(m.Locale) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Locale)))
		i += copy(dAtA[i:], m.Locale)
	}
	if m.CreatedAt != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintProfile(dAtA, i, uint64(types.SizeOfStdTime(*m.CreatedAt)))
		n1, err := types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.UpdatedAt != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintProfile(dAtA, i, uint64(types.SizeOfStdTime(*m.UpdatedAt)))
		n2, err := types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.ArchivedAt != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintProfile(dAtA, i, uint64(types.SizeOfStdTime(*m.ArchivedAt)))
		n3, err := types.StdTimeMarshalTo(*m.ArchivedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.DeletedAt != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintProfile(dAtA, i, uint64(types.SizeOfStdTime(*m.DeletedAt)))
		n4, err := types.StdTimeMarshalTo(*m.DeletedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}

func encodeVarintProfile(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *UpsertProfileOpts) Size() (n int) {
	var l int
	_ = l
	l = len(m.UserUUID)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.ScreenName)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.Timezone)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.Locale)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	return n
}

func (m *ProfilePayload) Size() (n int) {
	var l int
	_ = l
	l = len(m.UserUUID)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.ScreenName)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.Timezone)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.Locale)
	if l > 0 {
		n += 1 + l + sovProfile(uint64(l))
	}
	if m.CreatedAt != nil {
		l = types.SizeOfStdTime(*m.CreatedAt)
		n += 2 + l + sovProfile(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = types.SizeOfStdTime(*m.UpdatedAt)
		n += 2 + l + sovProfile(uint64(l))
	}
	if m.ArchivedAt != nil {
		l = types.SizeOfStdTime(*m.ArchivedAt)
		n += 2 + l + sovProfile(uint64(l))
	}
	if m.DeletedAt != nil {
		l = types.SizeOfStdTime(*m.DeletedAt)
		n += 2 + l + sovProfile(uint64(l))
	}
	return n
}

func sovProfile(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozProfile(x uint64) (n int) {
	return sovProfile(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UpsertProfileOpts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpsertProfileOpts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpsertProfileOpts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserUUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserUUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScreenName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScreenName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timezone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timezone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locale", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Locale = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProfile(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfile
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProfilePayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProfilePayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProfilePayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserUUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserUUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScreenName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScreenName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timezone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timezone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locale", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Locale = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 996:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 997:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 998:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArchivedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ArchivedAt == nil {
				m.ArchivedAt = new(time.Time)
			}
			if err := types.StdTimeUnmarshal(m.ArchivedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 999:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeletedAt == nil {
				m.DeletedAt = new(time.Time)
			}
			if err := types.StdTimeUnmarshal(m.DeletedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProfile(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfile
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProfile(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthProfile
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowProfile
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipProfile(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthProfile = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProfile   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("profile.proto", fileDescriptorProfile) }

var fileDescriptorProfile = []byte{
	// 541 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x94, 0x4d, 0x6b, 0x13, 0x41,
	0x18, 0xc7, 0x5d, 0xad, 0x79, 0x99, 0xd0, 0xaa, 0x43, 0xd1, 0x75, 0x0f, 0xd9, 0xb0, 0xa7, 0x80,
	0x74, 0x17, 0x22, 0xf5, 0x50, 0x4f, 0x09, 0x82, 0x78, 0xd1, 0x12, 0x8d, 0x07, 0x41, 0xc2, 0x64,
	0xf7, 0x69, 0x32, 0xb0, 0xd9, 0x19, 0x66, 0x67, 0x0b, 0xf1, 0x53, 0xf4, 0x63, 0x29, 0x5e, 0xfc,
	0x04, 0x51, 0xe2, 0xdb, 0x3d, 0xe0, 0x5d, 0xe6, 0x65, 0x93, 0x94, 0x12, 0xda, 0x5e, 0x7b, 0x09,
	0xfb, 0xbc, 0xfc, 0xfe, 0xcf, 0x33, 0x93, 0xe7, 0x19, 0xb4, 0xcb, 0x05, 0x3b, 0xa1, 0x29, 0x84,
	0x5c, 0x30, 0xc9, 0xb0, 0x1b, 0x93, 0x8c, 0x88, 0xd9, 0x04, 0x48, 0x2a, 0x27, 0x21, 0x4d, 0x78,
	0x68, 0xe3, 0xde, 0xc1, 0x98, 0xca, 0x49, 0x31, 0x0a, 0x63, 0x36, 0x8d, 0xc6, 0x6c, 0xcc, 0x22,
	0x0d, 0x8c, 0x8a, 0x13, 0x6d, 0x69, 0x43, 0x7f, 0x19, 0x21, 0xcf, 0x1f, 0x33, 0x36, 0x4e, 0x61,
	0x9d, 0x25, 0xe9, 0x14, 0x72, 0x49, 0xa6, 0xdc, 0x26, 0x1c, 0x6e, 0xe8, 0x99, 0xa2, 0x07, 0xa6,
	0x6a, 0x44, 0x13, 0x1e, 0xd1, 0x4c, 0x82, 0xc8, 0x48, 0x1a, 0x15, 0x39, 0x08, 0xfd, 0x63, 0xb1,
	0xa3, 0xad, 0xd8, 0xba, 0xd2, 0x8c, 0x43, 0x1e, 0x11, 0xf9, 0xae, 0xac, 0x98, 0x5b, 0xb6, 0x73,
	0x55, 0xb6, 0x28, 0x68, 0x62, 0x99, 0x67, 0x57, 0x65, 0x52, 0x9a, 0xcb, 0x37, 0x5c, 0xda, 0x5a,
	0xc1, 0x3f, 0x07, 0x3d, 0x18, 0xf0, 0x1c, 0x84, 0x3c, 0x36, 0x17, 0xa8, 0x62, 0xf8, 0x39, 0xaa,
	0xab, 0xb3, 0x0c, 0x55, 0x01, 0xd7, 0x69, 0x39, 0xed, 0x7a, 0xaf, 0xb9, 0x98, 0xfb, 0xb5, 0x41,
	0x0e, 0x62, 0x30, 0x78, 0xf5, 0x62, 0x39, 0xf7, 0xf7, 0x92, 0xd1, 0x51, 0xb0, 0x4a, 0x0a, 0xfa,
	0x35, 0xf5, 0x3d, 0x28, 0x68, 0x82, 0x0f, 0x51, 0x23, 0x8f, 0x05, 0x40, 0x36, 0xcc, 0xc8, 0x14,
	0xdc, 0xdb, 0x1a, 0xdf, 0x5f, 0xce, 0xfd, 0xfb, 0x0a, 0xd9, 0x08, 0x05, 0x7d, 0x64, 0xac, 0xd7,
	0x64, 0x0a, 0xf8, 0x21, 0xaa, 0x90, 0x53, 0x22, 0x89, 0x70, 0xef, 0x28, 0xa2, 0x6f, 0x2d, 0xdc,
	0x42, 0x8d, 0x04, 0xf2, 0x58, 0x50, 0x2e, 0x29, 0xcb, 0xdc, 0x1d, 0x1d, 0xdc, 0x74, 0x61, 0x0f,
	0xd5, 0xd4, 0xbf, 0xf6, 0x89, 0x65, 0xe0, 0xde, 0xd5, 0xe1, 0x95, 0xad, 0x54, 0x53, 0x16, 0x93,
	0x14, 0xdc, 0x8a, 0x51, 0x35, 0x56, 0xf0, 0x65, 0x07, 0xed, 0xd9, 0x13, 0x1f, 0x93, 0x59, 0xca,
	0x48, 0x72, 0xf3, 0x0f, 0x8d, 0xdf, 0x22, 0x14, 0x0b, 0x20, 0x12, 0x92, 0x21, 0x91, 0xee, 0xaf,
	0x6a, 0xcb, 0x69, 0x37, 0x3a, 0x5e, 0x68, 0x56, 0x20, 0x2c, 0x07, 0x25, 0x5c, 0x0d, 0x64, 0xef,
	0xd1, 0x72, 0xee, 0xdf, 0x53, 0x07, 0x58, 0x63, 0xc1, 0xd9, 0x77, 0xdf, 0xe9, 0xd7, 0xad, 0xa3,
	0x2b, 0x95, 0x68, 0xc1, 0x93, 0x52, 0xf4, 0xf7, 0x35, 0x44, 0xd7, 0x98, 0x15, 0xb5, 0x8e, 0xae,
	0xc4, 0xef, 0x51, 0x83, 0x88, 0x78, 0x42, 0x4f, 0x8d, 0xea, 0x9f, 0xcb, 0x55, 0xdd, 0xf2, 0xae,
	0x37, 0x38, 0x23, 0x8b, 0x4a, 0x8f, 0x69, 0x36, 0x81, 0x14, 0x6c, 0xb3, 0x7f, 0xaf, 0xd1, 0xec,
	0x1a, 0xb3, 0xcd, 0x5a, 0x47, 0x57, 0x76, 0xbe, 0x3a, 0xa8, 0x6a, 0x67, 0x09, 0x7f, 0x44, 0xbb,
	0xe7, 0xd6, 0x09, 0x3f, 0x09, 0xb7, 0x3d, 0x55, 0xe1, 0x85, 0xbd, 0xf3, 0xfc, 0x8b, 0xc9, 0xfa,
	0x4d, 0x29, 0x47, 0x10, 0x13, 0xb4, 0xff, 0x12, 0x4a, 0xa4, 0x37, 0x5b, 0xf9, 0x2f, 0x03, 0xbd,
	0xf6, 0xf6, 0x36, 0xce, 0xaf, 0x41, 0xef, 0xf1, 0xe7, 0x45, 0xd3, 0xf9, 0xb6, 0x68, 0x3a, 0x3f,
	0x16, 0x4d, 0xe7, 0xec, 0x67, 0xf3, 0xd6, 0x87, 0xaa, 0xcd, 0x1c, 0x55, 0xf4, 0x05, 0x3d, 0xfd,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0x28, 0xb5, 0xbc, 0x86, 0x8d, 0x05, 0x00, 0x00,
}
